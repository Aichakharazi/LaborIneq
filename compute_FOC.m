%% model computations FOC

%%

% Define a symbolic variable
syms l_hfty omega_hfty l_hnty omega_hnty l_lfty omega_lfty l_lnty omega_lnty... 
l_hftm omega_hftm l_hntm omega_hntm l_lftm omega_lftm l_lntm omega_lntm... 
margcost zz alpha phi_hf phi_hn phi_lf phi_ln varrho sigma upsilon s... 
theta_hf theta_hn theta_lf theta_ln epsilon xi zeta;

f =    omega_hfty * l_hfty + omega_hnty * l_hnty + omega_lfty * l_lfty + omega_lnty * l_lnty +...
    omega_hftm * l_hftm + omega_hntm * l_hntm + omega_lftm * l_lftm + omega_lntm * l_lntm -...
    margcost  * zz *(alpha*((...
                (...
                    phi_hf * (l_hfty)^(1/varrho) + phi_hn * (l_hnty)^(1/varrho)...
                )^(varrho/sigma) +...
                (...
                    phi_lf * (l_lfty)^(1/upsilon) + phi_ln * (l_lnty)^(1/upsilon)...
                )^(upsilon/sigma)...
            )^sigma )^((s-1)/s) + (1 - alpha)*((...
                (...
                    theta_hf * (l_hftm)^(1/epsilon) + theta_hn * (l_hntm)^(1/epsilon)...
                )^(epsilon/xi) +...
                (...
                    theta_lf * (l_lftm)^(1/zeta) + theta_ln * (l_lntm)^(1/zeta)...
                )^(zeta/xi)...
            )^xi )^((s-1)/s) )^(s/(s-1));


% Compute the first derivative of the function
df = diff(f, l_hfty);

% Display the original function and its derivative
disp(['Original function: ', char(f)]);
disp(['First derivative: ', char(df)]);

disp(['Original function: ', latex(f)]);
disp(['First derivative: ', latex(df)]);

%%



%%









% Define a symbolic variable
syms l_hty omega_hty l_lty omega_lty... 
l_htm omega_htm l_ltm omega_ltm... 
margcost zz alpha phi_h phi_l varrho sigma upsilon s... 
theta_h theta_l epsilon xi zeta;

f =   omega_hty * l_hty + omega_lty * l_lty +...
    omega_htm * l_htm +  omega_ltm * l_ltm  -...
    margcost   * ( zz *(alpha*((...
                (...
                    phi_h * (l_hty)...
                )^(1/sigma) +...
                (...
                    phi_l * (l_lty)...
                )^(1/sigma)...
            )^sigma )^((s-1)/s) + (1 - alpha)*((...
                (...
                    theta_h * (l_htm)...
                )^(1/xi) +...
                (...
                    theta_l * (l_ltm)...
                )^(1/xi)...
            )^xi )^((s-1)/s) )^(s/(s-1))  );


% Compute the first derivative of the function
df = diff(f, l_hty);

% Display the original function and its derivative
disp(['Original function: ', char(f)]);
disp(['First derivative: ', char(df)]);

disp(['Original function: ', latex(f)]);
disp(['First derivative: ', latex(df)]);

%%










% Define a symbolic variable
syms l_ty omega_ty... 
l_tm omega_tm... 
margcost zz alpha phi s... 
theta ;

f =   omega_ty * l_ty +...
    omega_tm * l_tm  -...
    margcost  * ( zz *(alpha*(phi * (l_ty))^((s-1)/s) + (1 - alpha)*( theta* (l_tm) )^((s-1)/s) )^(s/(s-1))  );


% Compute the first derivative of the function
df = diff(f, l_ty);

% Display the original function and its derivative
disp(['Original function: ', char(f)]);
disp(['First derivative: ', char(df)]);

disp(['Original function: ', latex(f)]);
disp(['First derivative: ', latex(df)]);

%%


%% With Capital

% Define a symbolic variable
syms l_hfty omega_hfty l_hnty omega_hnty l_lfty omega_lfty l_lnty omega_lnty... 
l_hftm omega_hftm l_hntm omega_hntm l_lftm omega_lftm l_lntm omega_lntm... 
margcost zz alpha phi_hf phi_hn phi_lf phi_ln varrho sigma upsilon s... 
theta_hf theta_hn theta_lf theta_ln epsilon xi zeta k gamma;

f =    omega_hfty * l_hfty + omega_hnty * l_hnty + omega_lfty * l_lfty + omega_lnty * l_lnty +...
    omega_hftm * l_hftm + omega_hntm * l_hntm + omega_lftm * l_lftm + omega_lntm * l_lntm -...
    margcost  * k^(1-gamma) * ( zz *(alpha*((...
                (...
                    phi_hf * (l_hfty)^(1/varrho) + phi_hn * (l_hnty)^(1/varrho)...
                )^(varrho/sigma) +...
                (...
                    phi_lf * (l_lfty)^(1/upsilon) + phi_ln * (l_lnty)^(1/upsilon)...
                )^(upsilon/sigma)...
            )^sigma )^((s-1)/s) + (1 - alpha)*((...
                (...
                    theta_hf * (l_hftm)^(1/epsilon) + theta_hn * (l_hntm)^(1/epsilon)...
                )^(epsilon/xi) +...
                (...
                    theta_lf * (l_lftm)^(1/zeta) + theta_ln * (l_lntm)^(1/zeta)...
                )^(zeta/xi)...
            )^xi )^((s-1)/s) )^(s/(s-1))  )^(gamma);


% Compute the first derivative of the function
df = diff(f, l_hfty);

% Display the original function and its derivative
disp(['Original function: ', char(f)]);
disp(['First derivative: ', char(df)]);

disp(['Original function: ', latex(f)]);
disp(['First derivative: ', latex(df)]);

%%









% Define a symbolic variable
syms l_hty omega_hty l_lty omega_lty... 
l_htm omega_htm l_ltm omega_ltm... 
margcost zz alpha phi_h phi_l varrho sigma upsilon s... 
theta_h theta_l epsilon xi zeta k gamma;

f =   omega_hty * l_hty + omega_lty * l_lty +...
    omega_htm * l_htm +  omega_ltm * l_ltm  -...
    margcost  * k^(1-gamma) * ( zz *(alpha*((...
                (...
                    phi_h * (l_hty)...
                )^(1/sigma) +...
                (...
                    phi_l * (l_lty)...
                )^(1/sigma)...
            )^sigma )^((s-1)/s) + (1 - alpha)*((...
                (...
                    theta_h * (l_htm)...
                )^(1/xi) +...
                (...
                    theta_l * (l_ltm)...
                )^(1/xi)...
            )^xi )^((s-1)/s) )^(s/(s-1))  )^(gamma);


% Compute the first derivative of the function
df = diff(f, l_hty);

% Display the original function and its derivative
disp(['Original function: ', char(f)]);
disp(['First derivative: ', char(df)]);

disp(['Original function: ', latex(f)]);
disp(['First derivative: ', latex(df)]);

%%










% Define a symbolic variable
syms l_ty omega_ty... 
l_tm omega_tm... 
margcost zz alpha phi s... 
theta k gamma;

f =   omega_ty * l_ty +...
    omega_tm * l_tm  -...
    margcost  * k^(1-gamma) * ( zz *(alpha*(phi * (l_ty))^((s-1)/s) + (1 - alpha)*( theta* (l_tm) )^((s-1)/s) )^(s/(s-1))  )^(gamma);


% Compute the first derivative of the function
df = diff(f, l_ty);

% Display the original function and its derivative
disp(['Original function: ', char(f)]);
disp(['First derivative: ', char(df)]);

disp(['Original function: ', latex(f)]);
disp(['First derivative: ', latex(df)]);

%%


options=optimset('disp','iter','LargeScale','off','TolX',1e-8,'TolFun',1e-10,'MaxIter',100000000,'MaxFunEvals',10000000000);

alp = 0.5;
tights = 1.7;
x0=[1; 1; 1]; %

solutions = lsqnonlin(@(x) solveEquationsSearchMatch(x, alp, tights),x0,[],[],options);

% Extract va1lues from solutions
Ss = solutions(1);
Vs = solutions(2);
Qs = solutions(3);







 %%



